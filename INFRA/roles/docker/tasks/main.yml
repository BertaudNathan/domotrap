---
# Remove old Ubuntu-packaged Docker to avoid conflicts (safe if not present)
- name: Remove legacy Docker packages (if any)
  apt:
    name:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
    state: absent
  ignore_errors: true

# Prereqs for Docker's official apt repo
- name: Install apt transport prerequisites
  apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: true

- name: Create keyrings dir
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"

- name: Add Docker official GPG key
  shell: |
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
    gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  args:
    creates: /etc/apt/keyrings/docker.gpg

- name: Add Docker apt repository
  copy:
    dest: /etc/apt/sources.list.d/docker.list
    mode: "0644"
    content: |
      deb [arch={{ ansible_architecture | default('amd64') | replace('x86_64','amd64') | replace('aarch64','arm64') }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable

- name: apt update (Docker repo)
  apt:
    update_cache: true

# Install modern Docker + buildx + compose-plugin (Compose v2)
- name: Install Docker CE and Compose v2 plugin
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present

- name: Ensure Docker service is running and enabled
  service:
    name: docker
    state: started
    enabled: true

# Le user par d√©faut peut lancer docker
- name: Add current login user to docker group (optional)
  user:
    name: "{{ ansible_env.SUDO_USER | default(ansible_user_id) }}"
    groups: docker
    append: true
  when: ansible_env.SUDO_USER is defined or ansible_user_id is defined

# Quick sanity checks
- name: Check docker version
  command: docker --version
  register: docker_cli_version
  changed_when: false

- name: Check compose v2 plugin
  command: docker compose version
  register: docker_compose_v2
  changed_when: false

- name: Show installed versions
  debug:
    msg:
      - "{{ docker_cli_version.stdout }}"
      - "{{ docker_compose_v2.stdout }}"
